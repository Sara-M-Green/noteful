[{"C:\\Users\\smg10\\projects\\noteful\\src\\index.js":"1","C:\\Users\\smg10\\projects\\noteful\\src\\App.js":"2","C:\\Users\\smg10\\projects\\noteful\\src\\Sidebar\\Sidebar.js":"3","C:\\Users\\smg10\\projects\\noteful\\src\\Dummy-data.js":"4","C:\\Users\\smg10\\projects\\noteful\\src\\FolderList\\FolderList.js":"5","C:\\Users\\smg10\\projects\\noteful\\src\\NotesList\\NotesList.js":"6","C:\\Users\\smg10\\projects\\noteful\\src\\Note\\Note.js":"7","C:\\Users\\smg10\\projects\\noteful\\src\\Folder\\Folder.js":"8","C:\\Users\\smg10\\projects\\noteful\\src\\NotePage\\NotePage.js":"9","C:\\Users\\smg10\\projects\\noteful\\src\\MainFolders\\MainFolders.js":"10","C:\\Users\\smg10\\projects\\noteful\\src\\NotefulContext.js":"11","C:\\Users\\smg10\\projects\\noteful\\src\\AddFolder\\AddFolder.js":"12","C:\\Users\\smg10\\projects\\noteful\\src\\AddNote\\AddNote.js":"13","C:\\Users\\smg10\\projects\\noteful\\src\\ErrorHandling\\NotesError.js":"14"},{"size":265,"mtime":1606760068860,"results":"15","hashOfConfig":"16"},{"size":3344,"mtime":1607202785504,"results":"17","hashOfConfig":"16"},{"size":355,"mtime":1607120888848,"results":"18","hashOfConfig":"16"},{"size":12193,"mtime":1606781916828,"results":"19","hashOfConfig":"16"},{"size":514,"mtime":1607121151657,"results":"20","hashOfConfig":"16"},{"size":491,"mtime":1607132116339,"results":"21","hashOfConfig":"16"},{"size":1692,"mtime":1607052284213,"results":"22","hashOfConfig":"16"},{"size":732,"mtime":1607131518444,"results":"23","hashOfConfig":"16"},{"size":754,"mtime":1607120134125,"results":"24","hashOfConfig":"16"},{"size":602,"mtime":1607103592514,"results":"25","hashOfConfig":"16"},{"size":173,"mtime":1607102719802,"results":"26","hashOfConfig":"16"},{"size":1751,"mtime":1607131582563,"results":"27","hashOfConfig":"16"},{"size":5525,"mtime":1607197629348,"results":"28","hashOfConfig":"16"},{"size":651,"mtime":1607202606267,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"zb0yvf",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\smg10\\projects\\noteful\\src\\index.js",[],["63","64"],"C:\\Users\\smg10\\projects\\noteful\\src\\App.js",[],"C:\\Users\\smg10\\projects\\noteful\\src\\Sidebar\\Sidebar.js",[],"C:\\Users\\smg10\\projects\\noteful\\src\\Dummy-data.js",["65"],"C:\\Users\\smg10\\projects\\noteful\\src\\FolderList\\FolderList.js",[],"C:\\Users\\smg10\\projects\\noteful\\src\\NotesList\\NotesList.js",[],["66","67"],"C:\\Users\\smg10\\projects\\noteful\\src\\Note\\Note.js",["68"],"C:\\Users\\smg10\\projects\\noteful\\src\\Folder\\Folder.js",[],"C:\\Users\\smg10\\projects\\noteful\\src\\NotePage\\NotePage.js",[],["69","70"],"C:\\Users\\smg10\\projects\\noteful\\src\\MainFolders\\MainFolders.js",[],"C:\\Users\\smg10\\projects\\noteful\\src\\NotefulContext.js",[],["71","72"],"C:\\Users\\smg10\\projects\\noteful\\src\\AddFolder\\AddFolder.js",[],"C:\\Users\\smg10\\projects\\noteful\\src\\AddNote\\AddNote.js",["73","74","75"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ValidationError from '../ValidationError/ValidationError'\r\nimport NotefulContext from '../NotefulContext';\r\nimport './AddNote.css';\r\n\r\nclass AddNote extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            content: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            folderSelect: {\r\n                value: null,\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        history: {\r\n            push: () => { }\r\n        },\r\n    }\r\n\r\n    static contextType = NotefulContext;\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const newNote = {\r\n            name: e.target['noteNameInput'].value,\r\n            content: e.target['noteContentInput'].value,\r\n            folderId: e.target['noteFolderSelect'].value,\r\n            modified: new Date(),\r\n          }\r\n        const { name, content, folderSelect } = this.state;\r\n            \r\n        fetch('http://localhost:9090/notes', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newNote),\r\n        })\r\n        .then(res => {\r\n            if(!res.ok) {\r\n                return res.json().then(e => Promise.reject(e))\r\n            }\r\n            return res.json()\r\n        })\r\n        .then(note => {\r\n            this.context.addNote(note)\r\n            this.props.history.push(`/folder/${note.folderId}`)\r\n        })\r\n        .catch(error => {\r\n            console.error({ error })\r\n        })\r\n    }\r\n\r\n    updateName(name) {\r\n        this.setState({name: {value: name, touched: true}});\r\n    }\r\n\r\n    updateContent(content) {\r\n        this.setState({content: {value: content, touched: true}});\r\n    }\r\n\r\n    updatefolderSelect(folderSelect) {\r\n        this.setState({folderSelect: {value: folderSelect, touched: true}});\r\n    }\r\n\r\n\r\n    validateNoteName(){\r\n        const name = this.state.name.value.trim();\r\n        if (name.length === 0){\r\n            return \"Note name required\"\r\n        }\r\n    }\r\n\r\n    validateNoteContent(){\r\n        const content = this.state.content.value.trim();\r\n        if (content.length === 0) {\r\n            return \"Note content required\"\r\n        } \r\n    }\r\n\r\n    validateFolderInput(){\r\n        const folderSelect = this.state.folderSelect.value;\r\n        if(folderSelect === null) {\r\n            return \"Please select a folder\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { folders = [] } = this.context\r\n        const nameError = this.validateNoteName();\r\n        const contentError = this.validateNoteContent();\r\n        const folderError = this.validateFolderInput();\r\n\r\n\r\n        return(\r\n            <div>\r\n                <h2>Add Note</h2>\r\n                <Link to='/'>\r\n                    <button>Back</button>    \r\n                </Link>\r\n                \r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-section\">\r\n                        <label htmlFor=\"noteNameInput\">Note Name: </label>\r\n                        <input type=\"text\" id=\"noteNameInput\" name=\"noteNameInput\" onChange={e => this.updateName(e.target.value)} /> \r\n                        {this.state.name.touched && (\r\n                            <ValidationError message={nameError} />\r\n                        )}\r\n                           \r\n                    </div>\r\n                    <div className=\"form-section\">\r\n                        <label htmlFor=\"noteContentInput\">Note Content: </label>\r\n                        <textarea id=\"noteContentInput\" name=\"noteContentInput\" onChange={e => this.updateContent(e.target.value)} />\r\n                        {this.state.content.touched && (\r\n                            <ValidationError message={contentError} />\r\n                        )}\r\n                              \r\n                    </div>\r\n                    <div className=\"form-section\">\r\n                        <label htmlFor=\"noteFolderSelect\">Folder: </label>\r\n                        <select id=\"noteFolderSelect\" name=\"noteFolderSelect\" onChange={e => this.updatefolderSelect(e.target.value)}>\r\n                            <option value={null}>...</option>\r\n                            {folders.map(folder =>\r\n                                <option key={folder.id} value={folder.id}>\r\n                                    {folder.name}\r\n                                </option>\r\n                            )}\r\n                        </select>\r\n                        {this.state.folderSelect.touched && (\r\n                            <ValidationError message={folderError} />\r\n                        )}\r\n                              \r\n                    </div>\r\n                    <div className=\"form-section\">\r\n                        <input \r\n                            type=\"submit\"\r\n                            disabled={\r\n                                this.validateNoteName() ||\r\n                                this.validateNoteContent() ||\r\n                                this.validateFolderInput()\r\n                            }\r\n                            />\r\n                    </div>                    \r\n                </form>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNote","C:\\Users\\smg10\\projects\\noteful\\src\\ErrorHandling\\NotesError.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":1,"nodeType":"82","endLine":116,"endColumn":2},{"ruleId":"76","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"76","replacedBy":"89"},{"ruleId":"78","replacedBy":"90"},{"ruleId":"76","replacedBy":"91"},{"ruleId":"78","replacedBy":"92"},{"ruleId":"85","severity":1,"message":"93","line":42,"column":17,"nodeType":"87","messageId":"88","endLine":42,"endColumn":21},{"ruleId":"85","severity":1,"message":"94","line":42,"column":23,"nodeType":"87","messageId":"88","endLine":42,"endColumn":30},{"ruleId":"85","severity":1,"message":"95","line":42,"column":32,"nodeType":"87","messageId":"88","endLine":42,"endColumn":44},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["96"],["97"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["96"],["97"],["96"],["97"],"'name' is assigned a value but never used.","'content' is assigned a value but never used.","'folderSelect' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]